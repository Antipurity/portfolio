{"version":3,"file":"main.bundle.js","mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,mCAAmC,wCAAwC;AAC3E;AACA;AACA,QAAQ,qCAAqC;AAC7C;AACA;AACA;AACA,YAAY,OAAO,aAAa,WAAW,iDAAiD;AAC5F;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA,gBAAgB,mCAAmC,0BAA0B;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD,+BAA+B,sDAAsD;AACrF,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD,+BAA+B,oCAAoC;AACnE,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,6BAA6B;AACxD,eAAe;AACf;AACA;AACA;AACA,gBAAgB,8BAA8B,0BAA0B;AACxE;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8FAA8F;AAC9F,0GAA0G;AAC1G,sEAAsE,sCAAsC;AAC5G,oCAAoC,0CAA0C;AAC9E,qCAAqC,0DAA0D;AAC/F,uBAAuB;AACvB,mBAAmB;AACnB;AACA;AACA;AACA,wBAAwB,uEAAuE;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD,yBAAyB,eAAe,qCAAqC;AAC7E,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;AC7HD;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C,eAAe,2BAA2B;AAC1C,eAAe,2BAA2B;AAC1C,cAAc,8BAA8B;AAC5C,oBAAoB,8BAA8B;AAClD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4BAA4B,sBAAsB,GAAG;AAC7D;AACA;AACA,kBAAkB,uCAAuC;AACzD;AACA,SAAS;AACT;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,OAAO,KAAK,OAAO,aAAa,WAAW;AACvE,OAAO;AACP,sBAAsB,kBAAkB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,SAAS,KAAK,SAAS,aAAa,MAAM,aAAa,aAAa;AAC/G,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,0BAA0B;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,MAAM,IAAI,sBAAsB;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA,0BAA0B,eAAe;AACzC;AACA;AACA;AACA;AACA,OAAO;AACP,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,cAAc,SAAS,eAAe;AACtC,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,gCAAgC;AAC7C,aAAa,gCAAgC;AAC7C,cAAc,2BAA2B;AACzC,kBAAkB,4BAA4B;AAC9C,eAAe,4BAA4B;AAC3C,kBAAkB,+BAA+B;AACjD,qBAAqB,4BAA4B;AACjD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,sDAAsD;AAC7E,GAAG;AACH;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,sBAAsB,MAAM;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,cAAc;AACpC;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,2BAA2B;AACxC,WAAW,8BAA8B;AACzC,cAAc,6BAA6B;AAC3C,gBAAgB,4BAA4B;AAC5C,GAAG;AACH;AACA;AACA;AACA,uBAAuB,4BAA4B,+BAA+B;AAClF,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;;;;;;;;;;AC7WA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,QAAQ,QAAQ,yBAAyB;AACzC;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA,YAAY,SAAS,kBAAkB,YAAY,KAAK;AACxD;AACA;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA,iBAAiB,sDAAsD;AACvE;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;ACtCD;AACA;AACA;AACA,cAAc,2BAA2B;AACzC,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,QAAQ,6BAA6B;AACrC;AACA;AACA;AACA,YAAY,cAAc;AAC1B;AACA;AACA;AACA;AACA,YAAY,QAAQ,eAAe,gBAAgB;AACnD;AACA;AACA;AACA;AACA,qBAAqB,2BAA2B,UAAU;AAC1D;AACA;AACA;AACA;AACA,YAAY,gBAAgB;AAC5B;AACA;AACA,cAAc,SAAS,8BAA8B,GAAG,KAAK;AAC7D;AACA;AACA;AACA;AACA;AACA,uBAAuB,8CAA8C;AACrE;AACA,WAAW;AACX;AACA;AACA,YAAY,qBAAqB;AACjC;AACA;AACA;AACA;AACA;AACA,iBAAiB,8CAA8C;AAC/D;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;;;;;;;;;;ACzDM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gMAAgM;AAChM,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC9EA;AAC0B;AACO;AACW;AAC5C;AACA;AACA;AACA;AACA;AACA,cAAc,2BAA2B;AACzC,GAAG;AACH;AACA,aAAa;AACb,GAAG;AACH;AACA,eAAe,sDAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,kDAAkD,iBAAiB;AAC/E;AACA;AACA;AACA;AACA,gBAAgB,2DAA2D;AAC3E,8CAA8C,QAAQ,2BAA2B,MAAM,sBAAsB;AAC7G;AACA;AACA;AACA;AACA;AACA,YAAY,4BAA4B,gBAAgB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,qBAAqB;AAC1C,wBAAwB,6BAA6B;AACrD,eAAe;AACf;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;;;;UCvDD;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;ACNqB;AACC;AACI;AAC1B;AACA;AACA;AACA;AACA,cAAc,mBAAmB,eAAe,iCAAiC;AACjF,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,QAAQ,QAAQ,YAAY,GAAG;AAC/B;AACA,gCAAgC,iDAAiD;AACjF,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA,iDAAiD,aAAa;AAC9D,iDAAiD,aAAa;AAC9D;AACA;AACA,CAAC,GAAG,aAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,WAAW;AACjC;AACA;AACA;AACA;AACA,yGAAyG,EAAE;AAC3G;AACA;AACA;AACA,wCAAwC,IAAI,KAAK,IAAI,aAAa,WAAW,iBAAiB,IAAI,KAAK,IAAI,aAAa,WAAW,iBAAiB,IAAI,KAAK,IAAI,YAAY,EAAE;AAC/K;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB,C","sources":["webpack:///./contact-form.js","webpack:///./physics.js","webpack:///./project-card.js","webpack:///./project-description.js","webpack:///./project-info.js","webpack:///./projects.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./index.js"],"sourcesContent":["// A form to contact us with.\r\n\r\n\r\n\r\nVue.component('contact-form', {\r\n  props: ['value'], // If true, hide the form.\r\n  data() {\r\n    return {\r\n      state: 'idle', // idle, waiting, error, ok\r\n      message: '',\r\n    }\r\n  },\r\n  render(h) {\r\n    if (!this.value) setTimeout(() => this.$el && this.$el.scrollIntoView(true), 10)\r\n    clearTimeout(this.id)\r\n    if (this.state === 'error' || this.state === 'ok')\r\n      this.id = setTimeout(() => { this.state = 'idle', this.message = '' }, 5000)\r\n    return h(\r\n      'div',\r\n      { class:this.value ? '' : 'oneScreen' },\r\n      [\r\n        h(\r\n          'transition-group',\r\n          { props:{name:'slide'},  style:{ width:'100%', maxWidth:'50rem', margin:'auto' } },\r\n          this.value ? [] : [\r\n            h(\r\n              'h2',\r\n              { key:'andjahkdfhasfhk' },\r\n              'Contact me',\r\n            ),\r\n            h(\r\n              'div',\r\n              { key:'a', class:'row mb-3', style:{ margin:'0 -5px 0 -5px' } },\r\n              [\r\n                h(\r\n                  'input',\r\n                  {\r\n                    ref:'from',\r\n                    class:'col form-control',\r\n                    style:{ margin:'0 5px 0 5px' },\r\n                    domProps:{ placeholder:'From: jsmith@example.com', type:'email' },\r\n                  },\r\n                ),\r\n                h(\r\n                  'input',\r\n                  {\r\n                    ref:'subject',\r\n                    class:'col form-control',\r\n                    style:{ margin:'0 5px 0 5px' },\r\n                    domProps:{ placeholder:'Subject', type:'text' },\r\n                  },\r\n                ),\r\n              ],\r\n            ),\r\n            h(\r\n              'textarea',\r\n              {\r\n                key:'b',\r\n                ref:'body',\r\n                class:'form-control mb-3 w-100',\r\n                domProps:{ placeholder:'Text', rows:10 },\r\n              },\r\n            ),\r\n            h(\r\n              'div',\r\n              { key:'c', class:'row', style:{ margin:'0 -5px 0 -5px' } },\r\n              [\r\n                h(\r\n                  'button',\r\n                  {\r\n                    class:['col btn btn-primary', this.state === 'waiting' && 'disabled'],\r\n                    style:{ margin:'0 5px 0 5px' },\r\n                    on:{ click: () => {\r\n                      if (this.state === 'waiting') return\r\n                      const r = this.$refs\r\n                      const obj = {\r\n                        subject: r.subject.value || 'Contacting',\r\n                        text: r.from.value ? 'From: ' + r.from.value + '\\n\\n' + r.body.value : r.body.value,\r\n                      }\r\n                      if (!obj.text.length)\r\n                        return this.state = 'error', this.message = 'Cannot send an empty message'\r\n                      const msg = JSON.stringify(obj)\r\n                      if (msg.length > 20000)\r\n                        return this.state = 'error', this.message = 'The message is too long; remove ' + (msg.length - 20000) + ' characters'\r\n                      this.state = 'waiting', this.message = 'Taking a while. The queue is probably full; wait a minute.'\r\n                      fetch('https://alefedo-mailer.herokuapp.com', { method:'POST', mode:'cors', body:msg })\r\n                      .then(() => { this.state = 'ok', this.message = 'Sent' })\r\n                      .catch(() => { this.state = 'error', this.message = 'Failed to contact' })\r\n                    } },\r\n                  },\r\n                  [\r\n                    this.state === 'waiting' && h(\r\n                      'div',\r\n                      { key:'tiwitibbot', class:'spinner-border spinner-border-sm text-light' },\r\n                    ),\r\n                    ' Send',\r\n                  ],\r\n                ),\r\n                h(\r\n                  'button',\r\n                  {\r\n                    class:'col btn btn-secondary',\r\n                    style:{ margin:'0 5px 0 5px' },\r\n                    on:{ click: () => { this.$emit('input', !this.hidden) } },\r\n                  },\r\n                  'Don\\'t send',\r\n                ),\r\n              ],\r\n            ),\r\n            h(\r\n              'div',\r\n              {\r\n                key: this.message || ' ',\r\n                class: [\r\n                  this.state === 'waiting' ? 'text-secondary' : this.state === 'error' ? 'text-danger' : this.state === 'ok' ? 'text-success' : '',\r\n                  this.state === 'waiting' ? 'explanation-for-waiting' : '',\r\n                ],\r\n              },\r\n              this.message || ' ',\r\n            ),\r\n          ],\r\n        )\r\n      ],\r\n    )\r\n  },\r\n})","\r\n\r\n// Vue-integrated physics.\r\nVue.component('world', {\r\n  props:{\r\n    _class:{ type: String, default: 'block' },\r\n    gravityX:{ type: Number, default: 0, },\r\n    gravityY:{ type: Number, default: 1, },\r\n    bounded:{ type: Boolean, default: true },\r\n    allowDragging:{ type: Boolean, default: true },\r\n  },\r\n  inject:['oncollision'],\r\n  render(h) {\r\n    this.engine.gravity.x = this.gravityX\r\n    this.engine.gravity.y = this.gravityY\r\n    this.engine.positionIterations = 8\r\n    this.engine.constraintIterations = 8\r\n    return h('span',\r\n      { class: this._class, style:{ position: 'relative' }, },\r\n      [\r\n        h('div', {\r\n          style:{ position: 'absolute', left: 0, top: 0 },\r\n          ref: 'overlay',\r\n        }),\r\n        ...this.$slots.default,\r\n      ])\r\n  },\r\n  data() {\r\n    const views = [], links = new Map\r\n    this.engine = Matter.Engine.create({\r\n      enableSleeping: true,\r\n    })\r\n    this.runner = Matter.Runner.create()\r\n    this.worldViews = views\r\n    this.links = links\r\n    this.updateViews = function() {\r\n      const transforms = views.map(view => {\r\n        // Rotate, then translate by in-world position, plus the static-layout movement since creation.\r\n        const body = view.body\r\n        if (body.isSleeping) return\r\n        const x1 = body.position.x, y1 = body.position.y\r\n        const firstPos = view.initialPos\r\n        const x2 = x1 - firstPos.x\r\n        const y2 = y1 - firstPos.y\r\n        return `translate(${x2 | 0}px,${y2 | 0}px) rotate(${body.angle}rad)`\r\n      })\r\n      for (let i = 0; i < views.length; ++i)\r\n        if (transforms[i]) views[i].$el.style.transform = transforms[i]\r\n      // Rotate+scale constraint images.\r\n      links.forEach((constraint, el) => {\r\n        const pA = Matter.Constraint.pointAWorld(constraint)\r\n        const pB = Matter.Constraint.pointBWorld(constraint)\r\n        const dx = pB.x - pA.x\r\n        const dy = pB.y - pA.y\r\n        const distance = Math.hypot(dy, dx)\r\n        const angle = Math.atan2(dy, dx)\r\n        el.style.position = 'absolute'\r\n        el.style.transformOrigin = '0 0'\r\n        el.style.transform = ` translate(${pA.x | 0}px,${pA.y | 0}px) rotate(${angle}rad) scale(${distance/100},1)`\r\n      })\r\n    }\r\n    this.unboundConstraints = Object.create(null)\r\n    this.edges = []\r\n    return {}\r\n  },\r\n  async mounted() {\r\n    await new Promise(requestAnimationFrame)\r\n    Matter.Runner.start(this.runner, this.engine)\r\n    Matter.Events.on(this.runner, 'afterUpdate', this.updateViews)\r\n\r\n    // Add rects around the edges.\r\n    _updateWorldBounds(this, this.bounded)\r\n\r\n    // Also react to transitions inside <obj>ects like they're moving physical parts.\r\n    //   The assumed density is 1.\r\n    const trackedElems = new Map\r\n    function trackTransitions() {\r\n      const mult = 1e-3\r\n      for (let [el, last] of trackedElems) {\r\n        if (!el.parentNode) { trackedElems.delete(el);  continue }\r\n        const rect = el.getBoundingClientRect(), pRect = el.parentNode.getBoundingClientRect()\r\n        const x = rect.x - pRect.x + rect.width/2\r\n        const y = rect.y - pRect.y + rect.height/2\r\n        const dx = x - last.x, dy = last.y\r\n        const ddx = dx - last.dx, ddy = dy - last.dy\r\n        const area = rect.width * rect.height\r\n        const forceX = area * ddx * mult, forceY = area * ddy * mult\r\n        Matter.Body.applyForce(last.obj.body, { x, y }, { x: forceX, y: forceY })\r\n        last.x = x, last.y = y, last.dx = dx, last.dy = dy\r\n      }\r\n      if (trackedElems.size)\r\n        requestAnimationFrame(trackTransitions)\r\n    }\r\n    this.$el.ontransitionstart = evt => {\r\n      const el = evt.target\r\n      if (evt.propertyName !== 'transform' || !el || !(el instanceof Element)) return\r\n      if (trackedElems.has(el)) return\r\n      const obj = _getObjAtElem(el)\r\n      if (!obj) return\r\n      const rect = el.getBoundingClientRect(), pRect = el.parentNode.getBoundingClientRect()\r\n      const wasEmpty = !trackedElems.size\r\n      trackedElems.set(el, {\r\n        x: rect.x - pRect.x + rect.width/2,\r\n        y: rect.y - pRect.y + rect.height/2,\r\n        dx: 0,\r\n        dy: 0,\r\n        obj,\r\n      })\r\n      if (wasEmpty)\r\n        requestAnimationFrame(trackTransitions)\r\n    }\r\n    this.$el.ontransitionend = evt => {\r\n      if (evt.propertyName !== 'transform' || !(evt.target instanceof Element)) return\r\n      trackedElems.delete(evt.target)\r\n    }\r\n\r\n    // Also some mouse constraints.\r\n    if (this.allowDragging) {\r\n      const mouse = Matter.Mouse.create(this.$el)\r\n      // What the fuck, Matter.js. Why prevent scrolling?\r\n      //   https://github.com/liabru/matter-js/blob/master/src/core/Mouse.js\r\n      this.$el.removeEventListener('mousewheel', mouse.mousewheel)\r\n      this.$el.removeEventListener('DOMMouseScroll', mouse.mousewheel)\r\n      const mouseConstraint = Matter.MouseConstraint.create(this.engine, {\r\n        mouse,\r\n        constraint:{\r\n          damping: .9,\r\n          stiffness: .05,\r\n        },\r\n      })\r\n      Matter.Composite.add(this.engine.world, mouseConstraint)\r\n    }\r\n\r\n    // On resize, update the bounding boxes of all objects.\r\n    this.resizeObs = new ResizeObserver(() => {\r\n      _updateWorldBounds(this, this.bounded)\r\n      this.worldViews.forEach(_updatePhysObject) // TODO: Why does this result in position mismatch? (Eh, unfixed bug, who cares.)\r\n    })\r\n    this.resizeObs.observe(this.$el)\r\n    if (this.collisionHandler)\r\n      Matter.Events.off(this.engine, 'collisionActive', this.collisionHandler), this.collisionHandler = null\r\n    if (this.oncollision)\r\n      Matter.Events.on(this.engine, 'collisionActive', this.collisionHandler = evt => {\r\n        for (let i = 0; i < evt.pairs.length; ++i) {\r\n          // All this internal structure in Matter.js must be bad for performance, via GC pauses.\r\n          // Here, we call `this.oncollision` with 1 point, somewhere in the collided area.\r\n          const c = evt.pairs[i].collision, ac = evt.pairs[i].activeContacts\r\n          let ws = [], wSum = 0\r\n          for (let j = 0; j < ac.length; ++j)\r\n            wSum += ws[j] = Math.random()\r\n          let x = 0, y = 0\r\n          for (let j = 0; j < ac.length; ++j)\r\n            x += ac[j].vertex.x * (ws[j] / wSum),\r\n            y += ac[j].vertex.y * (ws[j] / wSum)\r\n          this.oncollision(this, x, y, c.depth)\r\n        }\r\n      })\r\n  },\r\n  beforeDestroy() {\r\n    if (this.collisionHandler)\r\n      Matter.Events.off(this.engine, 'collisionActive', this.collisionHandler), this.collisionHandler = null\r\n    this.resizeObs.unobserve(this.$el)\r\n    Matter.Events.off(this.runner, 'afterUpdate', this.updateViews)\r\n    Matter.Runner.stop(this.runner)\r\n    Matter.Engine.clear(this.engine)\r\n  },\r\n  provide() { return { world: this } },\r\n})\r\n\r\n\r\n\r\nfunction _updateWorldBounds(obj, bounded) {\r\n  // Creates 4 rects.\r\n  const comp = Matter.Composite, world = obj.engine.world\r\n  obj.edges.forEach(e => comp.remove(world, e))\r\n  obj.edges.length = 0\r\n  if (bounded) {\r\n    const extra = 500\r\n    const w = obj.$el.offsetWidth, h = obj.$el.offsetHeight\r\n    const r = (x,y,w,h,opt) => Matter.Bodies.rectangle(x+w/2,y+h/2,w,h,opt)\r\n    const opt = { isStatic: true }\r\n    obj.edges.push(\r\n      r(-extra, -extra, w + 2*extra, extra, opt),\r\n      r(-extra, h, w + 2*extra, extra, opt),\r\n      r(-extra, 0, extra, h, opt),\r\n      r(w, 0, extra, h, opt),\r\n    )\r\n    obj.edges.forEach(e => comp.add(world, e))\r\n  }\r\n}\r\n\r\n\r\n\r\nVue.component('obj', {\r\n  props:{\r\n    _class:{ type: String, default: 'block' },\r\n    static:{ type: Boolean, default: false, },\r\n    density:{ type: Number, default: 1, },\r\n    restitution:{ type: Number, default: .3, },\r\n    friction:{ type: Number, default: .7, },\r\n    frictionAir:{ type: Number, default: .0003, },\r\n    frictionStatic:{ type: Number, default: .9, },\r\n  },\r\n  render(h) {\r\n    if (this.body) {\r\n      this.body.density = this.density\r\n      this.body.friction = this.friction\r\n      this.body.frictionAir = this.frictionAir\r\n      this.body.frictionStatic = this.frictionStatic\r\n      this.body.restitution = this.restitution\r\n      this.body.isStatic = this.static\r\n    }\r\n    return h('span', { class:this._class, on:this.$options._parentListeners }, this.$slots.default)\r\n  },\r\n  async mounted() {\r\n    this.$el._vueObj = this\r\n    await new Promise(requestAnimationFrame)\r\n    this.body = Matter.Body.create({})\r\n    this.initialPos = null\r\n    const pos = _getStaticElemPos(this.$el, this.world.$el)\r\n    const w = this.$el.offsetWidth, h = this.$el.offsetHeight\r\n    pos.x += w/2, pos.y += h/2\r\n    this.initialPos = pos\r\n    Matter.Body.set(this.body, {\r\n      angle: 0,\r\n      position: Matter.Vector.create(pos.x, pos.y),\r\n    })\r\n    _updatePhysObject(this)\r\n    Matter.Composite.add(this.world.engine.world, this.body)\r\n    this.world.worldViews.push(this)\r\n  },\r\n  beforeDestroy() {\r\n    const arr = this.world.worldViews\r\n    if (arr.indexOf(this) >= 0) arr.splice(arr.indexOf(this), 1)\r\n    Matter.Composite.remove(this.world.engine.world, this.body)\r\n  },\r\n  inject: ['world'],\r\n})\r\n\r\n\r\n\r\nfunction _updatePhysObject(obj) {\r\n  const el = obj.$el, body = obj.body\r\n  // Create the body, with rounded corners if present (only non-percentage, equal for each corner).\r\n  const w = el.offsetWidth, h = el.offsetHeight\r\n  const style = getComputedStyle(el)\r\n  const vertices = []\r\n  const angle = body.angle || 0\r\n  function vertex(x, y) {\r\n    const last = vertices[vertices.length-1]\r\n    // Ah yes, translate vertices automatically, but don't rotate them. Quality physics engine.\r\n    ;[x, y] = [x * Math.cos(angle) - y * Math.sin(angle), x * Math.sin(angle) + y * Math.cos(angle)]\r\n    if (!last || Math.abs(x - last.x) > 1e-4 || Math.abs(y - last.y) > 1e-4)\r\n      vertices.push({ x, y })\r\n  }\r\n  function corner(prop, cx, cy, i, vertices = 16) {\r\n    let rad = parseFloat(style[prop], 10) || 0\r\n    const x = cx*w/2, y = cy*h/2\r\n    if (rad) {\r\n      rad = Math.min(rad, w/2 - 1e-4)\r\n      rad = Math.min(rad, h/2 - 1e-4)\r\n      const centerX = x - cx * rad, centerY = y - cy * rad\r\n      for (let j = 0; j < vertices; ++j) {\r\n        const dx = Math.cos((i + j / (vertices-1)) * Math.PI / 2)\r\n        const dy = Math.sin((i + j / (vertices-1)) * Math.PI / 2)\r\n        vertex(centerX + dx*rad, centerY + dy*rad)\r\n      }\r\n    } else vertex(x, y)\r\n  }\r\n  corner('borderTopLeftRadius', -1, -1, 2) // -W,-H+R and -W+R,-H\r\n  corner('borderTopRightRadius', 1, -1, 3) // W-R,-H and W,-H+R\r\n  corner('borderBottomRightRadius', 1, 1, 4) // W,H-R and W-R,H\r\n  corner('borderBottomLeftRadius', -1, 1, 5) // -W+R,H and -W,H-R\r\n  Matter.Body.set(body, {\r\n    // See https://brm.io/matter-js/docs/classes/Body.html\r\n    density: obj.density,\r\n    friction: obj.friction,\r\n    frictionAir: obj.frictionAir,\r\n    frictionStatic: obj.frictionStatic,\r\n    restitution: obj.restitution,\r\n    isStatic: obj.static,\r\n  })\r\n  Matter.Body.setVertices(body, vertices)\r\n}\r\n\r\n\r\n\r\nVue.component('constraint', {\r\n  props:{\r\n    _class:{ type: String, default: '' },\r\n    name:{ type: String, required: true },\r\n    damping:{ type: Number, default: .05, },\r\n    stiffness:{ type: Number, default: .5, },\r\n  },\r\n  render(h) {\r\n    if (this.constraint)\r\n      this.constraint.damping = this.damping, this.constraint.stiffness = stiffness\r\n    return h('span', { class: this._class, style:{ width: '0px', height: '0px' } }, this.$slots.default)\r\n  },\r\n  async mounted() {\r\n    if (this.constraint) return\r\n    this.$el._vueConstraint = this\r\n    const con = this.world.unboundConstraints\r\n    if (con[this.name]) {\r\n      const that = con[this.name];  delete con[this.name]\r\n      this.other = that, that.other = this\r\n      await new Promise(requestAnimationFrame)\r\n      await new Promise(requestAnimationFrame)\r\n      this.inBody = _getObjAtElem(this.$el)\r\n      that.inBody = _getObjAtElem(that.$el)\r\n      this.constraint = that.constraint = Matter.Constraint.create({\r\n        bodyA: this.inBody ? this.inBody.body : undefined,\r\n        bodyB: that.inBody ? that.inBody.body : undefined,\r\n        pointA: this.inBody ? _getElemOffset(this.$el, this.inBody.$el) : _getStaticElemPos(this.$el, this.world.$el),\r\n        pointB: that.inBody ? _getElemOffset(that.$el, that.inBody.$el) : _getStaticElemPos(that.$el, that.world.$el),\r\n        damping: this.damping,\r\n        stiffness: this.stiffness,\r\n      })\r\n      const el = document.createElement('div')\r\n      el.className = 'dot'\r\n      this.link = that.link = this.world.$refs.overlay.appendChild(el)\r\n      this.world.links.set(this.link, this.constraint)\r\n      Matter.Composite.add(this.world.engine.world, this.constraint)\r\n    } else\r\n      con[this.name] = this\r\n  },\r\n  beforeDestroy() {\r\n    if (this.constraint) {\r\n      Matter.Composite.remove(this.world.engine.world, this.constraint)\r\n      if (this.other) {\r\n        const that = this.other\r\n        that.other = undefined, that.constraint = undefined\r\n      }\r\n      if (this.link)\r\n        this.link.remove(),\r\n        this.world.$refs.overlay.removeChild(this.link),\r\n        this.link = that.link = undefined\r\n    }\r\n  },\r\n  inject: ['world'],\r\n})\r\n\r\n\r\n\r\nfunction _getObjAtElem(el) {\r\n  while (el && el._vueObj === undefined) el = el.parentNode\r\n  return el && el._vueObj\r\n}\r\nfunction _getStaticElemPos(el, until = null) {\r\n  let x = 0, y = 0, n = 0\r\n  while (!until ? el !== until : (el && el !== until && until.contains(el))) {\r\n    const style = getComputedStyle(el)\r\n    x += el.offsetLeft - parseFloat(style.marginLeft)\r\n    y += el.offsetTop - parseFloat(style.marginTop)\r\n    el = el.offsetParent\r\n    ++n\r\n  }\r\n  if (el !== until) x -= el.offsetLeft, y -= el.offsetTop\r\n  return { x, y }\r\n}\r\nfunction _getElemOffset(from, to) {\r\n  const r1 = from.getBoundingClientRect(), r2 = to.getBoundingClientRect()\r\n  const x = r2.x - r1.x + (r2.width - r1.width) / 2\r\n  const y = r2.y - r1.y + (r2.height - r1.height) / 2\r\n  return { x, y }\r\n}","// A card for quick project summarization.\r\n//   See `./project-info.js` for where the data comes from.\r\n//   See `./project-description.js` for a component that describes projects in full.\r\nVue.component('project-card', {\r\n  props:{\r\n    project: Object,\r\n  },\r\n  render(h) {\r\n    const p = this.project\r\n    return h(\r\n      'obj',\r\n      { props:{ _class:'project-card' } },\r\n      [\r\n        h(\r\n          'h2',\r\n          { class:'name' },\r\n          p.name,\r\n        ),\r\n        p.images[0] ? h(\r\n          'img',\r\n          { attrs: { src:`assets/img/${p.images[0]}` } },\r\n        ) : '',\r\n        h(\r\n          'p',\r\n          { class:'description' },\r\n          p.description.split('\\n')[0]\r\n        ),\r\n        h(\r\n          'button',\r\n          {\r\n            on:{ click: () => this.$emit('viewproject', this.project) },\r\n            class:'btn btn-primary btn-lg fw-bold',\r\n          },\r\n          'Learn more →',\r\n        ),\r\n      ],\r\n    )\r\n  },\r\n})","// A full description of a project.\r\nVue.component('project-description', {\r\n  props:{\r\n    project:{ type:Object, default:null },\r\n  },\r\n  render(h) {\r\n    const p = this.project\r\n    if (!p) return\r\n    return h(\r\n      'div',\r\n      { class:'project-description' },\r\n      [\r\n        h( // Name.\r\n          'h2',\r\n          { class:'name' },\r\n          p.name,\r\n        ),\r\n        p.urls[0] && h( // The first link, to spare a click.\r\n          'iframe',\r\n          { attrs:{ src:p.urls[0] }, ref:'iframe' },\r\n        ),\r\n        h( // Links.\r\n          'div',\r\n          p.urls.filter(u => u).map(u => h('div', [\r\n            h('a', { class:'link-info', attrs:{ href:u } }, u)\r\n          ])),\r\n        ),\r\n        h( // Images.\r\n          'div',\r\n          { class:'images' },\r\n          p.images.map(im => h(\r\n            'img',\r\n            { attrs: { tabindex:0, src:`assets/img/${im}` } },\r\n          )),\r\n        ),\r\n        typeof marked == 'function' ? h( // Description.\r\n          'p',\r\n          {\r\n            domProps:{ innerHTML: marked.parseInline(p.description) },\r\n            class:'description',\r\n          },\r\n        ) : h(\r\n          'p',\r\n          { class:'description' },\r\n          p.description,\r\n        ),\r\n        h( // Hide.\r\n          'button',\r\n          {\r\n            on:{ click: () => this.$emit('viewproject', null) },\r\n            class:'btn btn-primary btn-lg fw-bold',\r\n          },\r\n          'Learn less ←',\r\n        ),\r\n      ]\r\n    )\r\n  },\r\n})","export let projects = JSON.parse(`[\r\n  {\r\n    \"name\":\"Text-sharing site\",\r\n    \"urls\":[\r\n      \"https://text-sharing-site.herokuapp.com/\",\r\n      \"https://github.com/Antipurity/text-sharing-site\"\r\n    ],\r\n    \"images\":[\r\n      \"text-sharing-site-1.jpg\",\r\n      \"text-sharing-site-2.jpg\",\r\n      \"text-sharing-site-3.jpg\"\r\n    ],\r\n    \"description\":\"A site where users share posts: pieces of Markdown content.\\\\n\\\\nUses Rust (a fast system programming language) and Firebase (a platform with a database offering), deployed on Heroku.\\\\n\\\\nThese pieces were not meant to go together.\"\r\n  },\r\n  {\r\n    \"name\":\"Image Modifier Project\",\r\n    \"urls\":[\r\n      \"https://image-modifier-project.herokuapp.com/\",\r\n      \"https://github.com/Antipurity/image-modifier-project\"\r\n    ],\r\n    \"images\":[\r\n      \"pristine-white-canvas.png\"\r\n    ],\r\n    \"description\":\"A platform for collaborative editing of a single image, pixel by pixel.\\\\n\\\\nUtilizes Julia, PostgreSQL, Docker, and JavaScript to deliver an intuitive and cohesive experience. Of editing one image.\\\\n\\\\n(The version deployed on Heroku often fails to start, because Julia is not a good choice for web servers, and [takes up too much RAM](https://discourse.julialang.org/t/large-idle-memory-usage/20368/5).)\"\r\n  },\r\n  {\r\n    \"name\":\"2048\",\r\n    \"urls\":[\r\n      \"2048.html\"\r\n    ],\r\n    \"images\":[\r\n      \"2048.png\"\r\n    ],\r\n    \"description\":\"A well-known game, recreated once more.\\\\n\\\\nUse arrow keys or arrow buttons to move all blocks, whereupon same-value blocks will combine into one. Last as long as you can; maximize the number that is plotted on the bottom-right.\\\\n\\\\nIt uses JavaScript and React. The latter is why its animations are somewhat broken.\"\r\n  },\r\n  {\r\n    \"name\":\"WebEnv\",\r\n    \"urls\":[\r\n      null,\r\n      \"https://github.com/antipurity/webenv\"\r\n    ],\r\n    \"images\":[\r\n      \"agent-5.gif\",\r\n      \"noexplore-anim.gif\",\r\n      \"orange-explore-blue-not.png\",\r\n      \"agent-1.png\",\r\n      \"agent-2.png\",\r\n      \"agent-3.png\",\r\n      \"agent-4.png\"\r\n    ],\r\n    \"description\":\"Online training environment for machine learning agents.\\\\n\\\\nIntended for training agents on the whole Web directly, without intermediaries such as [text](https://arxiv.org/abs/2101.00027) or [text-image pairs](https://github.com/openai/CLIP).\\\\n\\\\nWritten in JavaScript using Node.js (with an optional bridge to Python and other languages), this launches a browser (via Puppeteer), and collects observations and dispatches actions, so that the only thing that users have to worry about is how to go from observations to actions (the ML model).\"\r\n  },\r\n  {\r\n    \"name\":\"Conceptual\",\r\n    \"urls\":[\r\n      \"https://antipurity.github.io/conceptual\",\r\n      \"https://github.com/antipurity/conceptual\"\r\n    ],\r\n    \"images\":[\r\n      \"conc2.png\",\r\n      \"conc1.png\",\r\n      \"conc3.png\",\r\n      \"conc4.png\",\r\n      \"conc5.png\",\r\n      \"conc6.png\",\r\n      \"conc7.png\",\r\n      \"conc8.png\",\r\n      \"conc9.png\",\r\n      \"conc10.png\",\r\n      \"conc11.png\",\r\n      \"conc12.png\",\r\n      \"conc13.png\",\r\n      \"conc14.png\",\r\n      \"conc15.png\",\r\n      \"conc16.png\"\r\n    ],\r\n    \"description\":\"Programming language, runtime environment, ML research platform, etc. Includes many advanced uses of JavaScript and NodeJS.\\\\n\\\\nExperimenting with novel ways to create and interact with code. As such, the experience brought a lot of clarity and expertise in writing concise and crisp programs, even if humanity has its own preferred ways of doing things.\\\\n\\\\nThe purpose was to create a perfectly crisp framework of thought about everything, to pin down exactly what 'AGI' means and pin down its behaviors and implementation suggestions. This allows me to come up with creative solutions to any problems.\"\r\n  }\r\n]`)","// A component for all projects.\r\nimport './project-card.js'\r\nimport './project-description.js'\r\nimport { projects } from './project-info.js'\r\n\r\n\r\n\r\nVue.component('projects', {\r\n  props:{\r\n    project:{ type:Object, default:null },\r\n  },\r\n  data() {\r\n    return { viewedProject: this.project }\r\n  },\r\n  render(h) {\r\n    const ps = projects\r\n    const pChange = project => {\r\n      this.viewedProject = project\r\n      const el = this.$refs.projectCards.$el\r\n      if (this.$refs && this.$refs.projectCards)\r\n        setTimeout(() => el.scrollIntoView(true), 10), setTimeout(() => el.scrollIntoView(true), 300)\r\n    }\r\n    return h(\r\n      'div',\r\n      [\r\n        h(\r\n          'world',\r\n          { class:'projects-container wholeWidth', domProps:{ id:'projects' } },\r\n          [\r\n            this.$slots.default,\r\n            h(\r\n              'div',\r\n              { key:'project-cards', ref:'projectCards', class:'projects' },\r\n              ps.map(p => h('project-card', { props:{ project:p, expanded:false }, on:{viewproject:pChange} }))\r\n            ),\r\n          ]\r\n        ),\r\n        h(\r\n          'transition-group',\r\n          { ref:'projectCards', props:{ name:'slide' } },\r\n          [\r\n            this.viewedProject ? h(\r\n              'project-description',\r\n              {\r\n                key: this.viewedProject.name,\r\n                ref: 'projectDescription',\r\n                on:{ viewproject:pChange },\r\n                props:{ project: this.viewedProject },\r\n              },\r\n            ) : undefined,\r\n          ],\r\n        ),\r\n      ]\r\n    )\r\n  },\r\n})","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import './physics.js'\r\nimport './projects.js'\r\nimport './contact-form.js'\r\n\r\n\r\n\r\nVue.component('block', {\r\n  render(h) { return h('span', { class:'block' }, [this.$slots.default || ' ']) },\r\n})\r\nVue.component('animated-text', {\r\n  props:['value'],\r\n  render(h) {\r\n    const occured = {}\r\n    return h('transition-group',\r\n      { props: {name:'fade'}, },\r\n      (''+this.value).split('').map(\r\n        (ch, i) => h('block', { key:ch + (occured[ch] = (occured[ch] || 0) + 1) }, ch)))\r\n  },\r\n})\r\nwindow.app = new Vue({\r\n  el: '#app',\r\n  provide:{\r\n    oncollision: sparksOnCollision,\r\n  },\r\n  data:{\r\n    contactHidden: true,\r\n    description:[\r\n      'A ',\r\n      'software engineer',\r\n      ' that ',\r\n      'builds stuff',\r\n      '.',\r\n    ],\r\n  },\r\n})\r\n\r\n\r\n\r\n// Intermittently, update the description randomly.\r\nfunction pick(a) { return a[Math.random() * a.length | 0] }\r\nsetTimeout(function f() {\r\n  app.description[1] = pick([\r\n    'software engineer',\r\n    'developer',\r\n    'person',\r\n    'full stack developer',\r\n  ]), app.description = [...app.description]\r\n  setTimeout(f, Math.random() * 20000)\r\n}, Math.random() * 20000)\r\nsetTimeout(function f() {\r\n  app.description[2] = pick([\r\n    ' that ',\r\n    ' who ',\r\n    ' which ',\r\n  ]), app.description = [...app.description]\r\n  setTimeout(f, Math.random() * 40000)\r\n}, Math.random() * 40000)\r\nsetTimeout(function f() {\r\n  app.description[3] = pick([\r\n    'builds stuff',\r\n    'delivers code',\r\n    'creates experiences',\r\n    'finds creative solutions',\r\n  ]), app.description = [...app.description]\r\n  setTimeout(f, Math.random() * 20000)\r\n}, Math.random() * 20000)\r\n\r\n\r\n\r\n// Keep track of `--x` and `--y` CSS variables.\r\nfunction setMousePosition(evt, remove = false) {\r\n  const elem = evt.target\r\n  if (elem && !(elem instanceof Element)) elem = elem.parentNode\r\n  if (!elem || !(elem instanceof Element)) return\r\n  if (elem.tagName !== 'BUTTON') return // Only using it for this anyway.\r\n  if (!remove) {\r\n    const x = evt.offsetX, y = evt.offsetY\r\n    if (x || y) elem.style.setProperty('--x', x+'px')\r\n    if (x || y) elem.style.setProperty('--y', y+'px')\r\n  } else {\r\n    elem.style.removeProperty('--x')\r\n    elem.style.removeProperty('--y')\r\n  }\r\n}\r\naddEventListener('mouseover', setMousePosition, {passive:true})\r\naddEventListener('mousemove', setMousePosition, {passive:true})\r\naddEventListener('mouseout', evt => {\r\n  setMousePosition(evt, true)\r\n}, {passive:true})\r\n\r\n\r\n\r\n// On collision, make sparks.\r\nfunction sparksOnCollision(world, x, y, depth) {\r\n  const n = Math.min(3, Math.abs(depth) * Math.random()) | 0\r\n  for (let spark = 0; spark < n; ++spark) {\r\n    const el = document.createElement('div')\r\n    el.className = 'spark'\r\n    el.style.left = x+'px', el.style.top = y+'px'\r\n    const s = (.5+Math.random()*4) * Math.random() * Math.random()\r\n    el.style.transform = `translate(0,0) rotate(0deg) translate(0,0) rotate(0deg) translate(0,0) scale(${s})`\r\n    el.style.opacity = 1\r\n    world.$el.append(el)\r\n    setTimeout(() => {\r\n      el.style.transform = `translate(${f()}px,${f()}px) rotate(${r(721)-360}deg) translate(${f()}px,${f()}px) rotate(${r(721)-360}deg) translate(${f()}px,${f()}px) scale(${s})`\r\n      el.style.opacity = 0\r\n    }, 0)\r\n    setTimeout(() => el.remove(), 1000)\r\n  }\r\n  function f() {\r\n    const s = (.5+Math.random()*(32/n)) * Math.random() * Math.random()\r\n    return (r(501)-250) / Math.sqrt(s)\r\n  }\r\n  function r(n) { return Math.random()*n | 0 }\r\n}"],"names":[],"sourceRoot":""}