{"version":3,"file":"2048.bundle.js","mappings":";;;;;;;;;;;AAAA;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNA;AACA,CAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,oBAAoB;AAC5B;AACA;AACA,UAAU,wCAAwC;AAClD;AACA;AACA;AACA,UAAU,mBAAmB;AAC7B,kBAAkB,qFAAqF;AACvG,kBAAkB,mEAAmE;AACrF,kBAAkB,iFAAiF;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,cAAc;AAClC,sBAAsB,aAAa;AACnC;AACA;AACA,4BAA4B,2DAA2D;AACvF,4BAA4B,4DAA4D;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,QAAQ,oBAAoB;AAC5B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,UAAU,+BAA+B;AACzC;AACA;AACA;AACA;AACA,UAAU,+BAA+B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB,2BAA2B;AAC3B;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,4BAA4B,OAAO;AACnC,sBAAsB,OAAO;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,uBAAuB,QAAQ;AAC/B;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO;AAC3B,sBAAsB,gBAAgB;AACtC;AACA,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B,sBAAsB,OAAO;AAC7B;AACA,SAAS;AACT,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4CAA4C;AAC9D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6CAA6C;AAC/D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,4CAA4C;AAC9D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,6CAA6C;AAC/D,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,8BAA8B;AACtC;AACA;AACA,UAAU,0DAA0D;AACpE;AACA;AACA,YAAY,GAAG;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gB","sources":["webpack:///./small_projects/2048/2048.css?b167","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///./small_projects/2048/2048.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const e = React.createElement\r\nimport './2048.css'\r\n\r\n\r\n\r\nclass Site extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    const R = React.createRef\r\n    this.plots = {\r\n      numCount: R(),\r\n      nums: R(),\r\n      numSqrs: R(),\r\n    }\r\n  }\r\n  render() {\r\n    return e(\r\n      'div',\r\n      { className: 'site', },\r\n      e(\r\n        Grid,\r\n        { key:'grid', w:4, h:4, plots:this.plots },\r\n      ),\r\n      e(\r\n        'div',\r\n        { className:'plots' },\r\n        e(Plot, { ref:this.plots.numCount, data:[], aspectRatio:2, hint:'How many tiles are present.' }),\r\n        e(Plot, { ref:this.plots.nums, data:[], aspectRatio:2, hint:'Sum of tiles.' }),\r\n        e(Plot, { ref:this.plots.numSqrs, data:[], aspectRatio:2, hint:'Sum of squares of tiles.' }),\r\n      ),\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Grid extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      width: props.w,\r\n      height: props.h,\r\n      nums: [],\r\n      keys: [],\r\n    }\r\n    this.onkeydown = this.onkeydown.bind(this)\r\n    this.shift = this.shift.bind(this)\r\n    this.timeout = null\r\n  }\r\n  render() {\r\n    const fg = [], bg = [], s = this.state, w = s.width, h = s.height\r\n    if (s.nums.length !== w*h)\r\n      s.nums.length = s.keys.length = w*h, s.nums.fill(0), s.keys.fill(''), this.newRandomCell()\r\n    for (let y = 0; y < s.height; ++y)\r\n      for (let x = 0; x < s.width; ++x)\r\n        if (s.nums[y*w + x]) {\r\n          const at = y*w + x\r\n          fg.push(e(Cell, { key: s.keys[at], x,y,w,h, n: s.nums[at], foreground: true })),\r\n          bg.push(e(Cell, { key: s.keys[at], x,y,w,h, n: s.nums[at], foreground: false }))\r\n        }\r\n    const L = this.shift('left', null, true)\r\n    const R = this.shift('right', null, true)\r\n    const U = this.shift('up', null, true)\r\n    const B = this.shift('down', null, true)\r\n    if (!L && !R && !U && !B && this.timeout === null)\r\n        this.timeout = setTimeout(() => {\r\n          this.timeout = null\r\n          this.state.nums.length = 0\r\n          this.forceUpdate()\r\n        }, 3000)\r\n    return e(\r\n      'div',\r\n      { className: 'grid', },\r\n      e(\r\n        Buttons,\r\n        {\r\n          shift: this.shift,\r\n          left: L, right: R, up: U, down: B,\r\n        },\r\n      ),\r\n      e(\r\n        'div',\r\n        { className: 'grid-background', },\r\n        ...bg,\r\n      ),\r\n      e(\r\n        'div',\r\n        { className: 'grid-foreground', },\r\n        ...fg,\r\n      ),\r\n    )\r\n  }\r\n  onkeydown(evt) {\r\n    if (evt.key === 'ArrowLeft') this.shift('left', evt)\r\n    if (evt.key === 'ArrowRight') this.shift('right', evt)\r\n    if (evt.key === 'ArrowUp') this.shift('up', evt)\r\n    if (evt.key === 'ArrowDown') this.shift('down', evt)\r\n  }\r\n  componentDidMount() { document.body.addEventListener('keydown', this.onkeydown) }\r\n  componentWillUnmount() { document.body.removeEventListener('keydown', this.onkeydown) }\r\n  shift(dir, evt, dry = false) {\r\n    // (Shifting down appears to re-create cells. We handle keys correctly; seems to be React's problem.)\r\n    evt && evt.preventDefault()\r\n    if (dir === 'left' || dir === 'right') this.transpose()\r\n    if (dir === 'down' || dir === 'right') this.vertFlip()\r\n    const dirty = this.shiftUp(dry)\r\n    if (dir === 'down' || dir === 'right') this.vertFlip()\r\n    if (dir === 'left' || dir === 'right') this.transpose()\r\n    if (!dirty) return\r\n    if (dry) return dirty\r\n    this.newRandomCell(Math.random()<.2 ? 4 : 2)\r\n\r\n    // Update plots.\r\n    let nums = this.state.nums, p = this.props.plots, cnt = 0, sum = 0, sum2 = 0\r\n    for (let i = 0; i < nums.length; ++i)\r\n      cnt += nums[i] ? 1 : 0, sum += nums[i], sum2 += nums[i]*nums[i]\r\n    p.numCount.current.props.data.push(cnt)\r\n    p.numCount.current.forceUpdate()\r\n    p.nums.current.props.data.push(sum)\r\n    p.nums.current.forceUpdate()\r\n    p.numSqrs.current.props.data.push(sum2)\r\n    p.numSqrs.current.forceUpdate()\r\n\r\n    this.forceUpdate()\r\n  }\r\n  newCell(x,y, n) {\r\n    const k = ''+Math.random(), at = y * this.state.width + x\r\n    this.state.nums[at] = n, this.state.keys[at] = k\r\n  }\r\n  newRandomCell(n = 2) {\r\n    const s = this.state, free = []\r\n    for (let i = 0; i < s.nums.length; ++i)\r\n      if (!s.nums[i]) free.push(i)\r\n    if (!free.length)\r\n      return s.nums.fill(0), s.keys.fill(''), this.forceUpdate()\r\n    const i = free[Math.random() * free.length | 0], w = s.width\r\n    const x = i % w, y = i / w | 0\r\n    this.newCell(x, y, n)\r\n  }\r\n  printKeys() { // For debugging.\r\n    const s = this.state, keys = s.keys, w = s.width, h = s.height\r\n    if (!this.chars) this.chars = Object.create(null), this.n = 0\r\n    let out = ''\r\n    for (let y = 0, at = 0; y < h; ++y) {\r\n      for (let x = 0; x < w; ++x, ++at)\r\n        out += !keys[at] ? ' ' : this.chars[keys[at]] || (this.chars[keys[at]] = ''+(this.n++ % 10))\r\n      out += '\\n'\r\n    }\r\n    console.log(out)\r\n  }\r\n  shiftUp(dry = false) {\r\n    // Shift cells down, adding same-value cells into one.\r\n    const s = this.state, nums = s.nums, keys = s.keys, w = s.width, h = s.height\r\n    let dirty = false\r\n    for (let x = 0; x < w; ++x)\r\n      for (let y1 = 1; y1 < h; ++y1)\r\n        if (nums[y1*w + x])\r\n          for (let y2 = y1; y2 > 0; --y2) {\r\n            const at = y2*w + x, to = at - w\r\n            if (!nums[to] || nums[to] === nums[at]) {\r\n              if (dry) return true\r\n              nums[to] += nums[at], keys[to] = keys[at]\r\n              nums[at] = 0, keys[at] = ''\r\n              dirty = true\r\n            }\r\n          }\r\n      return dirty\r\n  }\r\n  transpose() {\r\n    // Transpose cell state.\r\n    const s = this.state, nums = s.nums, keys = s.keys, w = s.width, h = s.height\r\n    for (let y = 0; y < h; ++y)\r\n      for (let x = 0; x < w && x < y; ++x) {\r\n        const i = y*w + x, j = x*w + y\r\n        ;[nums[i], nums[j]] = [nums[j], nums[i]]\r\n        ;[keys[i], keys[j]] = [keys[j], keys[i]]\r\n      }\r\n  }\r\n  vertFlip() {\r\n    // Vertically flip cell state.\r\n    const s = this.state, nums = s.nums, keys = s.keys, w = s.width, h = s.height\r\n    for (let y = 0; y*2 < h; ++y)\r\n      for (let x = 0; x < w; ++x) {\r\n        const i = y*w + x, j = (h - y - 1)*w + x\r\n        ;[nums[i], nums[j]] = [nums[j], nums[i]]\r\n        ;[keys[i], keys[j]] = [keys[j], keys[i]]\r\n      }\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Buttons extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    const p = this.props, shift = p.shift\r\n    const W = '5em'\r\n    return [\r\n      e(\r\n        'button',\r\n        {\r\n          key:'left',\r\n          disabled: !p.left,\r\n          onClick: evt => shift('left', evt),\r\n          style:{ width:W, left:'-'+W, height:'100%', top:0, },\r\n        },\r\n        '🡄',\r\n      ),\r\n      e(\r\n        'button',\r\n        {\r\n          key:'right',\r\n          disabled: !p.right,\r\n          onClick: evt => shift('right', evt),\r\n          style:{ width:W, left:'100%', height:'100%', top:0, },\r\n        },\r\n        '🡆',\r\n      ),\r\n      e(\r\n        'button',\r\n        {\r\n          key:'up',\r\n          disabled: !p.up,\r\n          onClick: evt => shift('up', evt),\r\n          style:{ width:'100%', left:0, height:W, top:'-'+W, },\r\n        },\r\n        '🡅',\r\n      ),\r\n      e(\r\n        'button',\r\n        {\r\n          key:'down',\r\n          disabled: !p.down,\r\n          onClick: evt => shift('down', evt),\r\n          style:{ width:'100%', left:0, height:W, top:'100%', },\r\n        },\r\n        '🡇',\r\n      ),\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Cell extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    const { x,y,w,h, n, foreground } = this.props\r\n    const color = {\r\n      [2** 0]: 'none',\r\n      [2** 1]: '#50a91e',\r\n      [2** 2]: '#839921',\r\n      [2** 3]: '#a19a18',\r\n      [2** 4]: '#c4b532',\r\n      [2** 5]: '#9d9126',\r\n      [2** 6]: '#a9862c',\r\n      [2** 7]: '#ba9024',\r\n      [2** 8]: '#c2912e',\r\n      [2** 9]: '#c8862c',\r\n      [2**10]: '#b26814',\r\n      [2**11]: '#ab561f',\r\n      [2**12]: '#a9411d',\r\n      [2**13]: '#ab2727',\r\n      [2**14]: '#a1223c',\r\n      [2**15]: '#ab3055',\r\n      [2**16]: '#9d2157',\r\n      [2**17]: '#a3327d',\r\n      [2**18]: '#992482',\r\n      [2**19]: '#b037a3',\r\n      [2**20]: '#b81bbe',\r\n      [2**21]: '#a625ca',\r\n      [2**22]: '#8d15d0',\r\n      [2**23]: '#651edf',\r\n      [2**24]: '#1c13db',\r\n      [2**25]: '#1a4beb',\r\n      [2**26]: '#107adf',\r\n      [2**27]: '#15a9e9',\r\n      [2**28]: '#06efe0',\r\n      [2**29]: '#00ff00',\r\n    }\r\n    return e(\r\n      'div',\r\n      {\r\n        className: 'cell',\r\n        style:{\r\n          left: (x / w * 100) + '%',\r\n          top: (y / h * 100) + '%',\r\n          width: (1 / w * 100) + '%',\r\n          height: (1 / h * 100) + '%',\r\n          backgroundColor: foreground ? 'none' : color[n]\r\n        },\r\n      },\r\n      foreground ? ''+n : '',\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nclass Plot extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n  render() {\r\n    const p = this.props, data = p.data, len = data.length, ar = p.aspectRatio, hint = p.hint\r\n    if (len <= 1) return null\r\n    let min = Infinity, max = -Infinity\r\n    for (let i = 0; i < len; ++i)\r\n      if (data[i] < min) min = data[i]\r\n      else if (data[i] > max) max = data[i]\r\n    const W = 100*ar\r\n    let d = 'M 0,100 '\r\n    for (let i = 0; i < len; ++i) {\r\n      const x = i / (len-1) * W\r\n      const y = 100 - ((data[i] - min) / (max - min)) * 100\r\n      d += 'L ' + x + ',' + y + ' '\r\n    }\r\n\r\n    const score_0_1 = (data[data.length] - min) / (max - min)\r\n    typeof directScore != ''+void 0 && directScore(score_0_1 * 2 - 1)\r\n\r\n    d += 'L ' + W + ',100 Z'\r\n    return e(\r\n      'div',\r\n      { className:'plot', title:hint },\r\n      e(\r\n        'svg',\r\n        { width:'100%', height:'100%', viewBox:'0 0 ' + W + ' 100' },\r\n        e(\r\n          'path',\r\n          { d },\r\n        ),\r\n      ),\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nself.Site = Site"],"names":[],"sourceRoot":""}